/* *{
    margin: 0;
    padding: 0;
}
.segundo-texto{
    color: green;
}
 1px
1rem = 16px
vh = alto de página
vw = ancho de página
.text1{
    font-family: 'Poppins', sans-serif;
    color: rgb(54, 54, 114);
    font-size: 2rem;
    text-align: center;
    text-transform: uppercase;
    text-decoration: underline;
    letter-spacing: 5px;
    word-spacing: 10px;
    line-height: 2rem;
    background: linear-gradient(to right, rgb(60, 255, 0), blue);
}
.box{
    background-color: red;
    width: 100px;
    height: 100px;
    border: 1px solid black;
    margin: 10px;
    padding: 5px;
    border-radius: 0.4rem;
    box-shadow: 10px 10px 5px 0px rgba(0,0,0,0.75);
}

top
left
right
bottom
Esos no funcionan en el position static
position absolute coloca un elemento en relacion a su padre mas cercano
position relative coloca un elemento en relacion a su padre
position fixed coloca un elemento en relacion a la pantalla

.box2{
    background-color: royalblue;
    position: absolute;
    bottom: 0;
    left: 75vw;
}
.boxPadre{
    width: 80;
    height: 50vh;
    position: relative;
    background-color: rgb(84, 159, 202);
}
.box2{
    background-color: royalblue;
    position: absolute;
    z-index: 10;
}
.box3{
    background-color: orange;
    position: absolute;
    left: 10%;
    z-index: 5;
}
.box1{
    width: 100vw;
    height: 100vh;
    background-color: rgb(255, 166, 0);
    position: relative;
}
.boxHija{
    width: 200px;
    height: 200px;
    background-color: rgb(0, 225, 255);
    position: absolute;
    top: 20%;
    left: 10%;
}

@media screen and (max-width: 600px) {
    .box1{
        background-color: rgb(0, 225, 255);
    } 
    .boxHija{
        background-color: rgb(235, 27, 172);
        left: 50%;
        top: 20%;
    }
}
 @media screen and (min-width: 600px) {
    .box1{
        background-color: rgb(0, 225, 255);
    } 
    .boxHija{
        background-color: rgb(235, 27, 172);
        left: 50%;
        top: 20%;
    }
} */
 /*.container{
    background-color: blueviolet;
    border: 1px solid rgb(5, 16, 117);
    height: 50vh;
    width: 100vw;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 2vh;

 }
 .element{
    border: 1px solid rgb(255, 238, 6);
    margin: 0.4rem;
 }*/
 /*.lista-tareas{
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1vh;
    margin-top: 2vh;
    justify-content: center;
    height: 50vh;
    border: 1px solid black;
 }
 .tarea{
    padding: 0.4rem;
    border: 1px solid grey;
    border-radius: 0.4rem;
    width: 80%;
    text-align: center;
 }
 .completed{
    background-color: rgb(28, 199, 85);
 }
 .incompleted{
    background-color: rgb(228, 68, 68);
 }
 button{
    padding: 0.4rem;
    border: none;
    border-radius: 0.4rem;
    cursor: pointer;
    margin-top: 10px;
    margin-bottom: 10px;
    color: blanchedalmond;
    background-color: blueviolet;
 }*/
 /*.containerGrid{
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: 200px auto; 
    width: 90vw;
    height: 90vh;
     justify-items: end;
    align-items: center; 
    gap: 1rem;
 }

 .containerGrid div{
    background-color: cadetblue;
    border: 1px solid black;
    width: 200px;
    height: 100px; 
 
 .elemento1{
    grid-column: 1/4;
 }
 .elemento2{
    grid-column: 1/3;
    grid-row: 2/4;
 }*/
 .container{
    width: 40vw;
    height: 50vh;
    display: flex;
    justify-content: center;
    align-items: center;
 }
.box{
    border: none;
    padding: 0.4rem;
    border-radius: 0.4rem;
    background-color: blueviolet;
    color: rgb(235, 232, 227);
    width: 200px;
    text-align: center;
    font-size: 1.4rem;
    transition: 0.3s ease;
}
.box:hover{
    cursor: pointer;
    background-color: aliceblue;
    border: 1px solid blueviolet;
    color: crimson;
}
.box2{
    border: none;
    padding: 0.4rem;
    border-radius: 0.4rem;
    background-color: blueviolet;
    color: rgb(255, 255, 255);
    width: 200px;
    text-align: center;
    font-size: 1.4rem;
    animation: mover 1s infinite;
}
@keyframes mover{
    0%{
        transform: translateX(0);
    }
    50%{
        transform: translateX(100px);
    }
    100%{
        transform: translateX(0px);
    }
}
